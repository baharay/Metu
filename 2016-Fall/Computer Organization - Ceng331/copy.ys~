# Bahar Aydemir 2035657
# Execution begins at address 0 
	.pos 0
init:	irmovq stack, %rsp  	# Set up stack pointer
	pushq %r8
	pushq %r9
	pushq %rbx
	call main
	halt			# Terminate program 

.align 8
# Source block
src:
	.quad 0x00a
	.quad 0x0b0
	.quad 0xc00

# Destination
dest:
	.quad 0x111
	.quad 0x222
	.quad 0x333


main:	irmovq src,%rdi
	irmovq dest,%rsi
	call copy_block		# sum(array, 4)
	ret


# start in %rdi, count in %rsi
copy_block:	xorq %rax,%rax	     # sum = 0
		irmovq $0x8,%r8
		irmovq $0x1,%r9
		irmovq $0x3,%rbx
		jmp     test         # Goto test

loop:		mrmovq (%rdi),%rdx 
		rmmovq %rdx,(%rsi)
		xorq %rdx, %rax

		addq  %r8, %rdi
		addq %r8 , %rsi		
		subq %r9 , %rbx
						    
		
test:
	andq   %rbx, %rbx
	jne   loop          # Stop when 0
	pushq %rbx
	pushq %r9
	pushq %r8
	ret                  # Return

# Stack starts here and grows to lower addresses
	.pos 0x200
stack:

